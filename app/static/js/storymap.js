// Generated by CoffeeScript 1.6.3
(function() {
  window.GoogleMap = function(model) {
    this.model = model;
    this.mapOptions = {
      center: new google.maps.LatLng(35, -62),
      zoom: 2,
      styles: themes[window.user.mapStyle] || themes['gMapRetro'],
      mapTypeControl: false,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      zoomControlOptions: {
        position: google.maps.ControlPosition.LEFT_CENTER
      },
      panControlOptions: {
        position: google.maps.ControlPosition.LEFT_CENTER
      }
    };
    this.map = new google.maps.Map(document.getElementById("map-canvas"), this.mapOptions);
    this.infowindow = new google.maps.InfoWindow();
    this.markers = this.model.get("markers") || [];
    return this;
  };

  window.GoogleMap.prototype.plot = function(story) {
    var display, j, marker, self;
    j = story.toJSON();
    if (!((j.lat == null) || (j.lng == null) || typeof j.lat === "undefined" || typeof j.lng === "undefined")) {
      if (story.marker == null) {
        marker = new views.MapMarker({
          model: story,
          map: this.map
        });
        story.marker = marker;
      } else {
        marker = story.marker;
      }
      display = marker.render().$el.html();
      marker = marker.marker;
      cc("Plotting: marker to map");
      cc(marker);
      cc(" to ");
      cc(this.map);
      this.markers.push(marker);
      marker.setMap(this.map);
      self = this;
      google.maps.event.addListener(marker, "click", function() {
        self.infowindow.setContent(display);
        return self.infowindow.open(self.map, this);
      });
      story.set("hasLocation", true);
    } else {
      story.set("hasLocation", false);
    }
    story.trigger("doneloading");
    return this;
  };

  window.GoogleMap.prototype.clear = function() {
    return _.each(this.markers, function(marker) {
      return marker.setMap(null);
    });
  };

}).call(this);
