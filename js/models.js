// Generated by CoffeeScript 1.6.3
(function() {
  $(function() {
    var AllMaps, Article, Articles, Maps, StoryMap, Workspace, app, getCalaisData, getGoogleNews;
    window.cc = function(arg) {
      return console.log(arg);
    };
    /* Data Models*/

    Article = Backbone.Model.extend();
    Articles = Backbone.Collection.extend({
      model: Article,
      initialize: function(opts) {
        if ((opts != null) && opts.parent_map) {
          this.parent_map = opts.parent_map;
        }
        return this;
      }
    });
    StoryMap = Backbone.Model.extend({
      defaults: function() {
        return {
          markers: [],
          map: new GoogleMap(this),
          articles: new Articles({
            parent_map: this
          })
        };
      }
    }, getGoogleNews = function(val, start) {
      return $.get("./getnews.php", {
        q: val || $search.val(),
        start: start
      }, function(data) {
        var end, i, json, _i, _ref;
        json = JSON.parse(data);
        if (json.responseDetails === "out of range start") {
          end = true;
          return false;
        }
        for (i = _i = 0, _ref = json.responseData.results.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          getCalaisData(json.responseData.results[i]);
        }
        return true;
      });
    }, getCalaisData = function(content) {
      var context;
      console.log("getting data");
      context = content.titleNoFormatting + content.content;
      $.get("./calais.php", {
        content: context
      }, function(data) {
        var el, json;
        json = JSON.parse(data);
        if (json == null) {
          return;
        }
        console.log(json.doc.info.docDate);
        for (el in json) {
          if (json[el].hasOwnProperty("resolutions")) {
            content.latitude = json[el].resolutions[0].latitude;
            content.longitude = json[el].resolutions[0].longitude;
            stories.push(content);
            StoryMap.plotStory(content);
            return;
          }
        }
      });
      return content;
    });
    Maps = Backbone.Collection.extend({
      url: 'maps.php',
      model: StoryMap
    });
    AllMaps = new Maps();
    AllMaps.fetch({
      success: function(collection, response) {
        if (collection.length === 0) {
          return collection.add(new StoryMap());
        } else {
          return cc("Now we want to go to the route for all saved maps");
        }
      },
      error: function(collection, response) {
        return cc(response);
      }
    });
    /* Router*/

    Workspace = Backbone.Router.extend({
      routes: {
        "saved": "saved",
        "settings": "settings",
        "play": "play"
      },
      saved: function() {
        return cc("showing all maps");
      },
      settings: function() {
        return cc("showing settings");
      },
      play: function() {
        return cc("playing timeline animation");
      }
    });
    app = new Workspace();
    return Backbone.history.start();
  });

}).call(this);
